# Use official PHP 8.3 image as base
FROM php:8.3-cli

# Set working directory
WORKDIR /var/www/html

# Install system dependencies required for extensions
# git, zip, unzip are useful for composer
# libpng-dev, libjpeg-dev, libfreetype-dev for GD extension
# libzip-dev for zip extension
# libpq-dev for pgsql (if needed later)
# libicu-dev for intl extension
# libonig-dev for mbstring
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libjpeg-dev \
    libfreetype6-dev \
    libzip-dev \
    zip \
    unzip \
    libicu-dev \
    libonig-dev \
    libxml2-dev \
    libssl-dev \
    # Install Redis client library for phpredis extension
    librdkafka-dev \
    # Add Python 3, pip, pandas, and requests
    python3 \
    python3-pip \
    python3-pandas \
    python3-requests \
    # Clean up
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Install PHP extensions required by Laravel and common packages
RUN docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install -j$(nproc) gd \
    && docker-php-ext-install pdo pdo_mysql bcmath zip intl opcache exif pcntl sockets

# Install Redis extension
RUN pecl install redis && docker-php-ext-enable redis

# Install Composer globally
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Copy existing application directory contents
COPY . /var/www/html

# Copy composer.lock and composer.json
COPY composer.lock composer.json /var/www/html/

# Install composer dependencies
# Use --no-scripts to prevent running scripts before .env is ready
# Use --no-interaction to prevent prompts
RUN composer install --no-interaction --no-plugins --no-scripts --prefer-dist

# Run composer install again to execute scripts after initial install
RUN composer install --no-interaction --prefer-dist

# Expose port 8000 and start php artisan serve
EXPOSE 8000
CMD ["php", "artisan", "serve", "--host=0.0.0.0", "--port=8000"]
